module SOCCER_IMPL

exports all

definitions

values gk_subs_max : nat1 = 1;
       fp_subs_max : nat1 = 2

types  player = nat1

state  R_Book of
         on_field_players : set of player
         potential_substitutes : set of player
         goalkeeper : player
         nb_gk_subs : nat
         nb_fp_subs : nat

inv mk_R_Book(ofp,ps,gk, ngk, nfp) == 
    (card ofp) <= 11 and 
  /*(ngk , nfp )*/   (ngk <= gk_subs_max) and (nfp <= fp_subs_max) and
    gk not in set ps and 
    ofp inter ps = {}

init r == r = 
       mk_R_Book({1,2,3,4,5,6,7,8,9,10,11},
                 {12,13,14,15,16},1,0,0)
end

--functions
--
--leq_eleven_players : set of player +> bool
--leq_eleven_players(f) == (card f) <= 11
--   ;
--
--within_allowed_limits : nat * nat +> bool
--within_allowed_limits (ngk , nfp ) == 
--  /*(ngk , nfp )*/   (ngk <= gk_subs_max) and (nfp <= fp_subs_max)

operations

RED_CARD (p : player)
ext wr on_field_players : set of player
    wr potential_substitutes : set of player
   pre p in set on_field_players or p in set potential_substitutes
  post on_field_players = on_field_players~ \ {p}
       and potential_substitutes = potential_substitutes~ \ {p}
      ;

CHANGE_GOALKEEPER (p : player)
ext wr goalkeeper : player
    rd on_field_players : set of player
    rd potential_substitutes : set of player
  pre p in set on_field_players
  post goalkeeper = p
      ;

SUBSTITUTION (pl : player, subs: player)
ext wr on_field_players : set of player
    wr potential_substitutes : set of player
    wr goalkeeper : player
    wr nb_gk_subs : nat
    wr nb_fp_subs : nat
   pre pl in set on_field_players and subs in set potential_substitutes
       and (pl = goalkeeper => /*(ngk , nfp )*/   (nb_gk_subs+1 <= gk_subs_max) and (nb_fp_subs <= fp_subs_max))
       and (pl <> goalkeeper => /*(ngk , nfp )*/   (nb_gk_subs <= gk_subs_max) and (nb_fp_subs+1 <= fp_subs_max) )
  post on_field_players = on_field_players~ union {subs} \ {pl}
       and potential_substitutes = potential_substitutes~ \ {subs}
       and (pl = goalkeeper~ =>
           	 ((goalkeeper = subs) 
                 and (nb_gk_subs = nb_gk_subs~ +1 )
                 and (nb_fp_subs = nb_fp_subs~)))
       and (pl <> goalkeeper~ =>
                ((goalkeeper = goalkeeper~) 
                 and (nb_gk_subs = nb_gk_subs~)
                 and (nb_fp_subs = nb_fp_subs~ +1)))
;

SUBSTITUTION_GK (pl : player, subs: player)
ext wr on_field_players : set of player
    wr potential_substitutes : set of player
    wr goalkeeper : player
    wr nb_gk_subs : nat
    rd nb_fp_subs : nat
   pre pl in set on_field_players and subs in set potential_substitutes
       and pl = goalkeeper  and  /*(ngk , nfp )*/   (nb_gk_subs+1 <= gk_subs_max) and (nb_fp_subs <= fp_subs_max) 
  post on_field_players = on_field_players~ union {subs} \ {pl}
       and potential_substitutes = potential_substitutes~ \ {subs}
       and goalkeeper = subs and nb_gk_subs = nb_gk_subs~ +1 
;
SUBSTITUTION_FP (pl : player, subs: player)
ext wr on_field_players : set of player
    wr potential_substitutes : set of player
    rd goalkeeper : player
    rd nb_gk_subs : nat
    wr nb_fp_subs : nat
   pre pl in set on_field_players and subs in set potential_substitutes
       and pl <> goalkeeper and /*(ngk , nfp )*/   (nb_gk_subs <= gk_subs_max) and (nb_fp_subs+1 <= fp_subs_max)
  post on_field_players = on_field_players~ union {subs} \ {pl}
       and potential_substitutes = potential_substitutes~ \ {subs}
       and nb_fp_subs = nb_fp_subs~ +1
;
SUBSTITUTION_EXPL : player * player ==> ()
SUBSTITUTION_EXPL (pl , subs)
== if pl = goalkeeper then SUBSTITUTION_GK(pl,subs)
			else SUBSTITUTION_FP(pl,subs)
pre (pl = goalkeeper => 
          pre_SUBSTITUTION_GK(pl,subs,
                              mk_R_Book(on_field_players,potential_substitutes,
                                        goalkeeper,nb_gk_subs, nb_fp_subs)))
    and (pl <> goalkeeper => 
          pre_SUBSTITUTION_FP(pl,subs,
                              mk_R_Book(on_field_players,potential_substitutes,
                                        goalkeeper,nb_gk_subs,nb_fp_subs)))
;
/*
test:()==> R_Book
test() == let red=1, out1=10, in1=12, out2=2, in2=13, out3=3, in3=14 in (
  RED_CARD(red);
  SUBSTITUTION(out1, in1);
  SUBSTITUTION(out2, in2);
  SUBSTITUTION(out3, in3);
  return mk_R_Book(on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs);
);
*/
test:()==> R_Book
test() == let red=1, gp=10, out1=10, in1=12, out2=2, in2=13, out3=3, in3=14 in (
  RED_CARD(red);
  CHANGE_GOALKEEPER(gp);
  SUBSTITUTION(out1, in1);
  SUBSTITUTION(out2, in2);
  SUBSTITUTION(out3, in3);
  return mk_R_Book(on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs);
);

end SOCCER_IMPL



--%
--% Note: this results in the following error in tc def
--%vdm> tc SOCCER_IMPL def
--%Typechecking module SOCCER_IMPL ...
--%ERRORS: 2    WARNINGS: 0
--%Error : Function is not applied with parameters of the correct type
--%act : ( player * player * compose R_Book of ( set of player | {} ) ( set of player | {} ) player nat nat end )
--%exp : ( player * player * inv_(compose R_Book of ( set of player | {} ) ( set of player | {} ) player nat nat end) )
--%At line: 298  column: 51
--%
--% The explanation for this error is that the third argument is not a simple
--% composite but is associated to an invariant. The system is not able to
--% check that this invariant is fulfilled.
--
--\section{Italy vs Norway}
--
--We are now able to analyse the Italy-Norway game. Actually, the following
--sequence of operations is invalid:
--
--\begin{verbatim}
--RED_CARD(1)
--SUBSTITUTION(10,12)
--SUBSTITUTION(2,13)
--SUBSTITUTION(3,14)
--\end{verbatim}
--
--Because three field players have left the game. Moreover, Pagliuka has remained
--goal keeper for the whole match. The right sequence is:
--
--\begin{verbatim}
--RED_CARD(1)
--CHANGE_GOALKEEPER(10)
--SUBSTITUTION(10,12)
--SUBSTITUTION(2,13)
--SUBSTITUTION(3,14)
--\end{verbatim}

/********************************************************************
module SOCCER_EXPL

exports all

definitions

values gk_subs_max : nat1 = 1;
       fp_subs_max : nat1 = 2

types  player = nat1

state  R_Book of
         on_field_players : set of player
         potential_substitutes : set of player
         goalkeeper : player
         nb_gk_subs : nat
         nb_fp_subs : nat
inv mk_R_Book(ofp,ps,gk, ngk, nfp) == 
    leq_eleven_players(ofp) and 
    within_allowed_limits(ngk,nfp) and 
    gk not in set ps and 
    ofp inter ps = {}

init r == r = mk_R_Book({1,2,3,4,5,6,7,8,9,10,11}, {12,13,14,15,16}, 1, 0, 0)
end

functions

leq_eleven_players : set of player +> bool
leq_eleven_players(f) == (card f) <= 11
   ;

within_allowed_limits : nat * nat +> bool
within_allowed_limits (ngk , nfp ) == 
     (ngk <= gk_subs_max) and (nfp <= fp_subs_max)

operations

RED_CARD :  player ==> ()
RED_CARD (p) ==
(
on_field_players := on_field_players \ {p};
potential_substitutes := potential_substitutes \ {p}
)
pre p in set on_field_players or p in set potential_substitutes
post on_field_players = on_field_players~ \ {p}
       and potential_substitutes = potential_substitutes~ \ {p}
      ;

CHANGE_GOALKEEPER : player ==> ()
CHANGE_GOALKEEPER (p) ==
(
goalkeeper := p
)
pre p in set on_field_players
post goalkeeper = p
      ;

SUBSTITUTION : player * player ==> ()
SUBSTITUTION (pl, subs) ==
( on_field_players := on_field_players union {subs} \ {pl};
  potential_substitutes := potential_substitutes \ {subs};
  if pl = goalkeeper 
  then (goalkeeper := subs; 
		nb_gk_subs := nb_gk_subs +1)
  else nb_fp_subs := nb_fp_subs +1
)
pre pl in set on_field_players and subs in set potential_substitutes
       and (pl = goalkeeper => within_allowed_limits(nb_gk_subs+1,nb_fp_subs))
       and (pl <> goalkeeper => within_allowed_limits(nb_gk_subs,nb_fp_subs+1))
post on_field_players = on_field_players~ union {subs} \ {pl}
       and potential_substitutes = potential_substitutes~ \ {subs}
       and (pl = goalkeeper~ =>
           	 ((goalkeeper = subs) 
                 and (nb_gk_subs = nb_gk_subs~ +1 )
                 and (nb_fp_subs = nb_fp_subs~)))
       and (pl <> goalkeeper~ =>
                ((goalkeeper = goalkeeper~) 
                 and (nb_gk_subs = nb_gk_subs~)
                 and (nb_fp_subs = nb_fp_subs~ +1)))
;

SUBSTITUTION_GK : player * player ==> ()
SUBSTITUTION_GK (pl , subs) ==
(
 on_field_players := on_field_players union {subs} \ {pl};
 potential_substitutes  := potential_substitutes \ {subs};
 goalkeeper := subs;
 nb_gk_subs := nb_gk_subs +1
)
   pre pl in set on_field_players and subs in set potential_substitutes
       and pl = goalkeeper  and within_allowed_limits(nb_gk_subs+1,nb_fp_subs)
  post on_field_players = on_field_players~ union {subs} \ {pl}
       and potential_substitutes = potential_substitutes~ \ {subs}
       and goalkeeper = subs and nb_gk_subs = nb_gk_subs~ +1 
;
SUBSTITUTION_FP : player *player ==> ()
SUBSTITUTION_FP (pl , subs) ==
(
 on_field_players := on_field_players union {subs} \ {pl};
 potential_substitutes := potential_substitutes \ {subs};
 nb_fp_subs := nb_fp_subs +1
)
   pre pl in set on_field_players and subs in set potential_substitutes
       and pl <> goalkeeper and within_allowed_limits(nb_gk_subs,nb_fp_subs+1)
  post on_field_players = on_field_players~ union {subs} \ {pl}
       and potential_substitutes = potential_substitutes~ \ {subs}
       and nb_fp_subs = nb_fp_subs~ +1
;
SUBSTITUTION_EXPL : player * player ==> ()
SUBSTITUTION_EXPL (pl , subs) ==
  if pl = goalkeeper 
  then SUBSTITUTION_GK(pl,subs)
  else SUBSTITUTION_FP(pl,subs)
pre (pl = goalkeeper => 
          pre_SUBSTITUTION_GK(pl,subs,
                              mk_R_Book(on_field_players,potential_substitutes,
                                        goalkeeper,nb_gk_subs, nb_fp_subs)))
    and (pl <> goalkeeper => 
          pre_SUBSTITUTION_FP(pl,subs,
                              mk_R_Book(on_field_players,potential_substitutes,
                                        goalkeeper,nb_gk_subs,nb_fp_subs)))

end SOCCER_EXPL

********************************************************************/

--\section{Execution of the explicit specification}\label{VDMexe}
--
--This can be experimented with the VDM debugger of the IFAD toolbox.
--
--{\small \begin{verbatim}
--First execution : leads to an incorrect state.
--
--vdm> init
--Initializing specification ...
--vdm> set pre
--pre set
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 1,2,3,4,5,6,7,8,9,10,11 }
--{ 12,13,14,15,16 }
--1
--0
--0
--vdm> sdebug RED_CARD(1)
--(no return value)
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 2,3,4,5,6,7,8,9,10,11 }
--{ 12,13,14,15,16 }
--1
--0
--0
--vdm> sdebug SUBSTITUTION_EXPL(10,12)
--(no return value)
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 2,3,4,5,6,7,8,9,11,12 }
--{ 13,14,15,16 }
--1
--0
--1
--vdm> sdebug SUBSTITUTION_EXPL(2,13)
--(no return value)
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 3,4,5,6,7,8,9,11,12,13 }
--{ 14,15,16 }
--1
--0
--2
--vdm> sdebug SUBSTITUTION_EXPL(3,14)
--Run-Time Error 58: The pre-condition evaluated to false 
--At line: 141  column: 5
--vdm> 
--
--Second execution : Baggio is a goalkeeper.
--vdm> init
--Initializing specification ...
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 1,2,3,4,5,6,7,8,9,10,11 }
--{ 12,13,14,15,16 }
--1
--0
--0
--vdm> sdebug RED_CARD(1)
--(no return value)
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 2,3,4,5,6,7,8,9,10,11 }
--{ 12,13,14,15,16 }
--1
--0
--0
--vdm> sdebug CHANGE_GOALKEEPER(10)
--(no return value)
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 2,3,4,5,6,7,8,9,10,11 }
--{ 12,13,14,15,16 }
--10
--0
--0
--vdm> sdebug SUBSTITUTION_EXPL(10,12)
--(no return value)
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 2,3,4,5,6,7,8,9,11,12 }
--{ 13,14,15,16 }
--12
--1
--0
--vdm> sdebug SUBSTITUTION_EXPL(2,13)
--(no return value)
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 3,4,5,6,7,8,9,11,12,13 }
--{ 14,15,16 }
--12
--1
--1
--vdm> sdebug SUBSTITUTION_EXPL(3,14)
--(no return value)
--vdm> print on_field_players, potential_substitutes, goalkeeper, nb_gk_subs, nb_fp_subs
--{ 4,5,6,7,8,9,11,12,13,14 }
--{ 15,16 }
--12
--1
--2
--vdm> 
--\end{verbatim}}

